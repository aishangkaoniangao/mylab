1,测试了下scanf函数:test1.go
2,测试channel,从终端输入到channel，等channel消费后再由终端输入:test2.go
3,模拟单个线程生产，多个线程消费的情况:test3.go
说明：如果有多个线程等待消费，多个线程是排队的，而不是随机的，go会管理多个线程，循环等待消息。
一旦有新消息，排到的消费线程优先处理，消费之后该线程排到消费线程队列的末尾
4,模拟多个线程生产，一个线程消费的情况:test4.go
5,考虑两种情况：a，消息队列未空，消费者如何处理；b，消息队列已满，生产者如何处理
